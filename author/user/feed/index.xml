<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Nathan &#8211; Nathan Eberhardt</title>
	<atom:link href="https://neberhardt123.github.io/nathanspage/author/user/feed/" rel="self" type="application/rss+xml" />
	<link>https://neberhardt123.github.io/nathanspage</link>
	<description>InfoSec Blogs</description>
	<lastBuildDate>Fri, 25 Sep 2020 21:57:44 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.5.1</generator>

<image>
	<url>https://neberhardt123.github.io/nathanspage/wp-content/uploads/2020/09/cropped-item-32x32.jpg</url>
	<title>Nathan &#8211; Nathan Eberhardt</title>
	<link>https://neberhardt123.github.io/nathanspage</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Using CMD and PowerShell for Windows Reconnaissance</title>
		<link>https://neberhardt123.github.io/nathanspage/2020/09/24/windows-reconnaissance-guide/</link>
					<comments>https://neberhardt123.github.io/nathanspage/2020/09/24/windows-reconnaissance-guide/#respond</comments>
		
		<dc:creator><![CDATA[Nathan]]></dc:creator>
		<pubDate>Thu, 24 Sep 2020 20:07:26 +0000</pubDate>
				<category><![CDATA[Guides]]></category>
		<guid isPermaLink="false">https://neberhardt123.github.io/nathanspage/?p=14</guid>

					<description><![CDATA[This guide covers the fundamentals of windows enumeration, system footprinting and other types of reconnaissance, as well as some useful cmd/powershell cmdlets I’ve picked up while competing in CCDC. For both blue team and red team, it&#8217;s critical to know the ins and outs of your systems to ensure optimal security of your network. The...]]></description>
										<content:encoded><![CDATA[
<p>This guide covers the fundamentals of windows enumeration, system footprinting and other types of reconnaissance, as well as some useful cmd/powershell cmdlets I’ve picked up while competing in CCDC. For both blue team and red team, it&#8217;s critical to know the ins and outs of your systems to ensure optimal security of your network. </p>



<span id="more-14"></span>



<p>The more information you can collect about a system, the greater the chance of it becoming compromised. I&#8217;ll be adding more to this guide as I learn more about Windows Server/workstations. In future blogs, I’ll be showcasing how a misconfigured domain controller can be exploited by tools such as blood hound.</p>



<h2>Starting off</h2>



<hr class="wp-block-separator has-text-color has-background has-black-background-color has-black-color is-style-wide"/>


<pre class="brush: plain; title: ; notranslate">
Systeminfo 
</pre>


<p>Displays detailed information and configurations of the computer and operating system.</p>


<pre class="brush: plain; title: ; notranslate">
Wmic
</pre>


<p>The wmic command provides a command line interface for Windows Instrumentation. Wmic will also not be logged by default audit policies and event logs. There’s a lot of info you can extract with this command, and some cool things you can do with it as well. Here are a few examples:</p>



<div class="wp-block-group wmic-group has-white-background-color has-background"><div class="wp-block-group__inner-container"><pre class="brush: plain; title: ; notranslate">
wmic /output:c:os.html os get /format:hform
</pre>


<p>Generates an OS/system report in HTML</p>


<pre class="brush: plain; title: ; notranslate">
wmic logicaldisk where drivetype=3 get name, freespace, systemname, filesystem, size, volumeserialnumber
</pre>


<p>Displays Hardrive info</p>


<pre class="brush: plain; title: ; notranslate">
wmic STARTUP GET Caption, Command, User
</pre>


<p>Finds programs/scripts that start on boot</p>


<pre class="brush: plain; title: ; notranslate">
wmic [useraccount/group/services] list
</pre>


<p>&nbsp;Gets info about users/groups/services</p>


<pre class="brush: plain; title: ; notranslate">
Wmic qfe
</pre>


<p>Gets a list of updates on the windows machine</p>
</div></div>


<pre class="brush: plain; title: ; notranslate">
Net
</pre>


<p>The net command manages many aspects of the network settings on a windows machine. Some uses:</p>



<div class="wp-block-group net-groupcss has-white-background-color has-background"><div class="wp-block-group__inner-container"><pre class="brush: plain; title: ; notranslate">
Net [user/group]
</pre>


<p>Lists all local and domain users/groups.</p>


<pre class="brush: plain; title: ; notranslate">
Net file
</pre>


<p>Shows a list of open files on a server.</p>


<pre class="brush: plain; title: ; notranslate">
Net share
</pre>


<p>Lists/manages shared resources on the machine</p>


<pre class="brush: plain; title: ; notranslate">
Net start
</pre>


<p>Displays running services.</p>
</div></div>


<pre class="brush: plain; title: ; notranslate">
qwinsta
</pre>


<p>Displays any users currently logged on. The “query session” command performs the same task.</p>


<pre class="brush: plain; title: ; notranslate">
Cmdkey /list
</pre>


<p>Displays a list of all user names and credentials that are stored in credential manager.<a href="https://neberhardt123.github.io/nathanspage/wp-admin/edit.php?post_type=post"></a></p>


<pre class="brush: plain; title: ; notranslate">
Icacls [path]
</pre>


<div class="wp-block-group icacls-group"><div class="wp-block-group__inner-container">
<p>Gets permissions of the specified directory/file. Permissions are represented as uppercase letters in the output. Here is a quick overview of some of the permissions you will see:</p>



<p><strong>Simple rights:</strong></p>



<ul><li><strong>F</strong> (full access)</li><li><strong>M</strong> (modify access)</li><li><strong>RX</strong> (read and execute access)</li><li><strong>R</strong> (read-only access)</li><li><strong>W</strong> (write-only access)</li></ul>



<p><strong>Inherited Rights (apply only to directories):</strong></p>



<ul><li><strong>(OI)</strong>: object inherit</li><li><strong>(CI)</strong>: container inherit</li><li><strong>(IO)</strong>: inherit only</li><li><strong>(NP)</strong>: do not propagate inherit</li><li><strong>(I)</strong>: permission inherited from parent container</li></ul>



<p>There are a list of other specific rights you can view on the microsoft docs. <a rel="noreferrer noopener" href="https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc753525(v=ws.10)?redirectedfrom=MSDN" target="_blank">https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc753525(v=ws.10)?redirectedfrom=MSDN</a></p>



<p>The output can be verbose, so you can pipe the command into filters. Example:</p>


<pre class="brush: plain; title: ; notranslate">
icacls &quot;C:\Program Files\*&quot; | findstr &quot;(F)&quot; | findstr &quot;Everyone&quot;
</pre>


<p>This narrows down your search by piping the command into &#8220;findstr&#8221;, which filters the output to &#8220;Full&#8221; Permissions and the &#8220;Everyone&#8221; Group.</p>
</div></div>


<pre class="brush: plain; title: ; notranslate">
schtasks /query
</pre>


<p>Looks for any scheduled tasks running on the machine.</p>


<pre class="brush: plain; title: ; notranslate">
netsh
</pre>


<div class="wp-block-group netsh-group"><div class="wp-block-group__inner-container">
<p>Network shell (netsh) is a command-line utility that allows you to configure and display the status of various network communications. I&#8217;ll only be going over a few examples of what you can do with this tool.</p>


<pre class="brush: plain; title: ; notranslate">
netsh interface ip show config
</pre>


<p>Displays configurations for your network interfaces.</p>


<pre class="brush: plain; title: ; notranslate">
netsh advfirewall firewall export ]path]
</pre>


<p>Grabs firewall settings on the machine and exports to a file.</p>
</div></div>


<pre class="brush: plain; title: ; notranslate">
reg query [key]
</pre>


<p>the reg command is used to display values of a registry key. Examples:</p>



<div class="wp-block-group get-adcomputer"><div class="wp-block-group__inner-container"><pre class="brush: plain; title: ; notranslate">
reg query HKEY_LOCAL_MACHINE\SOFTWARE
</pre>


<p>Returns installed software.</p>
</div></div>



<div class="wp-block-group get-adcomputer"><div class="wp-block-group__inner-container"><pre class="brush: plain; title: ; notranslate">
reg query HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated
</pre>


<p>Checks if &#8220;AlwaysInstallElevated&#8221; policy is enabled. If it is, then installed programs will automatically run with Administrative privileges.</p>
</div></div>


<pre class="brush: plain; title: ; notranslate">
Nbtstat -a [IP]
</pre>


<p>Finds the NetBIOS name of an endpoint with the specified ip address.</p>



<h2>Domain Recon with PowerShell</h2>



<hr class="wp-block-separator is-style-wide"/>



<p>There is a lot of useful domain information you can collect with powershell cmdlets.</p>


<pre class="brush: plain; title: ; notranslate">
Get-ADDomain [Server]
</pre>


<p>Gets info about the domain.</p>


<pre class="brush: plain; title: ; notranslate">
Get-ADGroup [Group]
</pre>


<p>Gets info about the domain groups or specified group.</p>


<pre class="brush: plain; title: ; notranslate">
Get-ADGroupMember [Group]
</pre>


<p>Gets info about the members of a Domain Group. Example:</p>



<div class="wp-block-group get-adcomputer"><div class="wp-block-group__inner-container">
<div class="wp-block-group get-adcomputer"><div class="wp-block-group__inner-container"><pre class="brush: plain; title: ; notranslate">
Get-ADGroupMember &quot;Domain Admins&quot;
</pre>


<p>Get list of members in Domain Admins group.</p>
</div></div>
</div></div>


<pre class="brush: plain; title: ; notranslate">
Get-ADComputer [Computer]
</pre>


<p>Get info about domain computers or a specified computer. Example:</p>



<div class="wp-block-group termsrv-get"><div class="wp-block-group__inner-container">
<div class="wp-block-group get-adcomputer"><div class="wp-block-group__inner-container"><pre class="brush: plain; title: ; notranslate">
 Get-ADComputer -Filter {ServicePrincipalName -like “*TERMSRV*”}
</pre>


<p>Find all computers running RDP service</p>
</div></div>
</div></div>


<pre class="brush: plain; title: ; notranslate">
Get-ADUser
</pre>


<p>Get info about domain users or a specified Domain user. Example:</p>



<div class="wp-block-group spn-aduser"><div class="wp-block-group__inner-container">
<div class="wp-block-group spn-aduser"><div class="wp-block-group__inner-container"><pre class="brush: plain; title: ; notranslate">
Get-ADUser -Filter {ServicePrincipalName -like “*”} 
</pre>


<p>Find Service Accounts by filtering by SPN.</p>
</div></div>
</div></div>


<pre class="brush: plain; title: ; notranslate">
Get-GPO
</pre>


<p>Gets info about Group Policy Objects on the domain</p>



<p>To take this a step further, you can use a PowerShell platform called powersploit, which is used for privilege escalation and reconnaissance of a Domain Controller. Here are some powersploit cmdlets you can use for recon.</p>


<pre class="brush: plain; title: ; notranslate">
Get-DomainDNSZone
</pre>


<p>Enumerates the Active Directory DNS zones for a given domain</p>


<pre class="brush: plain; title: ; notranslate">
Get-NetGPOGroup
</pre>


<p>Finds a list of accounts with elevated privileges by scanning GPOs on the Domain.&nbsp;</p>


<pre class="brush: plain; title: ; notranslate">
Invoke-UserHunter
</pre>


<p>Finds machines on the local domain where specified users are logged into, and can check if the current user has local admin access to the machines.</p>


<pre class="brush: plain; title: ; notranslate">
Invoke-FileFinder
</pre>


<p>Finds sensitive files on hosts by searching shared folders.</p>


<pre class="brush: plain; title: ; notranslate">
Find-InterestingFile
</pre>


<p>Searches a local or remote path for files with specific terms in the name.</p>


<pre class="brush: plain; title: ; notranslate">
Invoke-UserEventHunter
</pre>


<p>&nbsp;Hunts for user logon events in domain controller event logs.</p>



<p>For more details on powersploit: <a href="https://powersploit.readthedocs.io/en/stable/Recon/README/" target="_blank" rel="noreferrer noopener">https://powersploit.readthedocs.io/en/stable/Recon/README/</a></p>
]]></content:encoded>
					
					<wfw:commentRss>https://neberhardt123.github.io/nathanspage/2020/09/24/windows-reconnaissance-guide/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>History of Minecraft Survival Games and battle royale</title>
		<link>https://neberhardt123.github.io/nathanspage/2020/09/24/mcsg/</link>
					<comments>https://neberhardt123.github.io/nathanspage/2020/09/24/mcsg/#respond</comments>
		
		<dc:creator><![CDATA[Nathan]]></dc:creator>
		<pubDate>Thu, 24 Sep 2020 19:37:56 +0000</pubDate>
				<category><![CDATA[Misc]]></category>
		<guid isPermaLink="false">https://neberhardt123.github.io/nathanspage/?p=1</guid>

					<description><![CDATA[Minecraft Hunger Games, a.k.a, Minecraft Survival Games is one of Minecraft&#8217;s most famous game modes of all time. Minecraft Hunger Games was founded in March 23, 2012, and was based on the popular &#8220;Hunger Games&#8221; movie that was released in early 2012. If you have no idea what Minecraft is, or even Hunger Games, let...]]></description>
										<content:encoded><![CDATA[
<p>Minecraft Hunger Games, a.k.a, Minecraft Survival Games is one of Minecraft&#8217;s most famous game modes of all time. Minecraft Hunger Games was founded in March 23, 2012, and was based on the popular &#8220;Hunger Games&#8221; movie that was released in early 2012. If you have no idea what Minecraft is, or even Hunger Games, let me explain briefly: Minecraft is a sandbox game that allows players to build, explore, and create virtually anything from their imagination. Hunger games is a concept created by Suzanne Collins where 24 randomly chosen children are selected to compete in a battle royale to the death. Although it may seem off-putting to put this type of concept into a video game, the idea of battle royale games would later lead to the creation of some of the most popular video games to date, such as Fortnite and PUBG. In a battle royale, players must fight to the last man standing. There is no second place, no third place, or even last place; only one winner will remain at the end. You are allowed to form teams and make alliances during the game, but all players must figure out how to keep themselves alive to the very end. Minecraft Hunger Games was later renamed to &#8220;Survival Games&#8221; in later iterations of the game mode.</p>



<p>Creating the world of Hunger Games in Minecraft was first thought of by a build team named Vareide, when they created the first hunger games map known as &#8220;SG-1&#8221;. The map payed tribute to the blockbuster franchise by spawning players in a circle around a &#8220;cornucopia,&#8221; which was filled with a large selection of weapons and gear. At game start, the player could either choose to rush towards the center and risk dying to the other players, or play it safe and run into the wild. However the player chose to plan out their strategies, everyone would eventually be forced into the center of the map after a given time. Players that died could continue to spectate the game, and even sponsor the remaining players with special items and gear. This was very similar to the Hunger Games movie where sponsors could donate food or medicine which could be dropped in the arena via parachutes. All aspects of SG-1 were implemented in an attempt to recreate the environment and feeling of the original Hunger Games.</p>



<figure class="wp-block-image size-full is-resized is-style-default"><img loading="lazy" src="https://neberhardt123.github.io/nathanspage/wp-content/uploads/2020/09/sg1.jpg" alt="SG-1" class="wp-image-155" width="585" height="328"/><figcaption>SG-1 Map</figcaption></figure>



<p>Just after a month of the release of SG-1, Minecraft Survival Games blew up in popularity, after a group of well-known youtubers collaborated together to play the map. The video, which was titled &#8220;Minecraft: Hunger Games Survival with Friends&#8221; garnered over 10 million views, and sparked interest in other Minecraft players who wanted to try this game mode out for themselves. Players were innovative, and over time new maps were added, and extra features were implemented to improve the gameplay experience.</p>



<p>One Minecraft server in particular become the dominating hub of the Hunger Games game mode, and it was known as MCSG. MCSG introduced a competitive scene for Survival Games, and players from around the world could test their skills on this server. The server featured a point system, where if players won, they would get a certain amount of points, and a leaderboard would track the total amount of points earned by each player. MCSG set the stage for Survival Games for years to come, and over time new servers would be created to try and make their own version of the game mode.</p>



<p>Unfortunately, in 2016, Minecraft Survival Games faced some major issues. Hackers and cheaters become more prominent, and players become extremely frustrated when they had to compete against large teams in their games when playing solo. In addition, Minecraft itself came out with several controversial updates that changed the way player combat behaved. It became apparent that most of these problems were almost impossible to resolve, and as a result MCSG died a bitter death. Other servers faced similar problems, and they too would eventually die off.</p>



<p>However, the story of battle royale games did not die off with Minecraft. Game developers took this new and exciting concept to create their own games. H1Z1 was a game released in 2015 that gained huge popularity, and it featured a post-apocalyptic map where 200 players would fight to the last man standing. H1Z1 had little in common with the original Hunger Games setting, other than that it was a battle royale game. Players entered the map via skydiving, and used guns as their primary weapons. </p>



<p>Future battle royale game would stray away from the original concept of Hunger Games, and would more closely represent games like H1Z1, featuring more modern weapons and designs. Games like Fortnite would later become one of the most popular games to ever exist.</p>



<p>Being a Minecraft Survival Games fan myself, I don&#8217;t necessarily consider the fall of MCSG as a a tragic event. Survival Games set the stage for what battle royale games would become and evolve into. It&#8217;s interesting to see how game developers have taken this mode into their own hands in order to entertain the lives of millions all over the world.</p>
]]></content:encoded>
					
					<wfw:commentRss>https://neberhardt123.github.io/nathanspage/2020/09/24/mcsg/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>
